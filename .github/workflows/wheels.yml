name: Build wheels

on:
  # reusable workflows: https://docs.github.com/en/actions/sharing-automations/reusing-workflows
  workflow_call:
  # Manual run
  workflow_dispatch:

# ensure only a single job is running
concurrency:
  group: wheels-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.os }}
    runs-on: ${{ matrix.runs-on }}

    strategy:
      fail-fast: false
      matrix:
        python: [37, 38, 39, 310, 311, 312, 313]
        # we need to seperate 32- and 64-bit windows due to different compiler setups
        os:
          - linux-intel
          - linux-arm
          - win32
          - win_amd64
          - macOS-intel
          - macOS-arm
        include:
          - archs: auto
            platform: auto
          # linux
          - os: linux-intel
            runs-on: ubuntu-latest
          - os: linux-arm
            runs-on: ubuntu-24.04-arm
          # windows
          - os: win32
            runs-on: windows-latest
            archs: x86
          - os: win_amd64
            runs-on: windows-latest
            archs: AMD64
          # MacOS
          - os: macos-intel
            # macos-13 was the last x86_64 runner
            runs-on: macos-13
          - os: macos-arm
            # macos-14+ (including latest) are ARM64 runners
            runs-on: macos-latest
            archs: auto,universal2

        exclude:
          # exclude python versions < 3.9 for macOS Apple Silicon
          - os: macOS-arm
            python: 37
          - os: macOS-arm
            python: 38

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      # setup MSVC (Windows)
      - name: Set up MSVC
        if: matrix.os == 'win32' || matrix.os == 'win_amd64'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.archs }}

      # https://cibuildwheel.readthedocs.io/en/stable/
      # https://github.com/pypa/cibuildwheel
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          CIBW_BUILD: 'cp${{ matrix.python }}-*'
          CIBW_PLATFORM: ${{ matrix.platform }}
          CIBW_ARCHS: ${{ matrix.archs }}
        #   CIBW_SKIP: '*-musllinux_*'
          CIBW_TEST_SKIP: "*-macOS-arm"
          
          CIBW_ENABLE: cpython-prerelease
          CIBW_TEST_COMMAND: python -c "import eikonalfm"
        with:
          output-dir: wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Build sdist
        run: pipx run build --sdist

      - name: Check README rendering for PyPI
        # packaging 24.0 breaks something with the license metadata
        run: |
          python -m pip install "packaging>=25.0"
          python -m pip install twine
          twine check dist/*
      
      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: ./dist/*.tar.gz
